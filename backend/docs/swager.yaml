openapi: 3.0.0
info:
  version: 1.0.0
  title: Library API
  description: API for accessing Library functionality
servers:
  - url: http://localhost:3000
paths:
  /user:
    get:
      description: Returns a list of users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of users returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{user_id}:
    get:
      description: Returns the user with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: User data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a user
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete a user
      security:
        - bearerAuth: []
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: User has been deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /book:
    get:
      description: Returns a list of books
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of books returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new book
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /book/{book_id}:
    get:
      description: Returns the book with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a book
      security:
        - bearerAuth: []
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
      responses:
        '201':
          description: Book has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete a book
      security:
        - bearerAuth: []
      parameters:
        - name: book_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Book has been deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cd:
    get:
      description: Returns a list of cds
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of cds returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cd'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new cd
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cd'
      responses:
        '201':
          description: Cd has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cd'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cd/{cd_id}:
    get:
      description: Returns the cd with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: cd_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Cd data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cd'
        '404':
          description: Cd with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update an cd
      security:
        - bearerAuth: []
      parameters:
        - name: cd_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cd'
      responses:
        '201':
          description: Cd has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cd'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete an cd
      security:
        - bearerAuth: []
      parameters:
        - name: cd_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Cd has been deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cd'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /magazine:
    get:
      description: Returns a list of magazines
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of magazines returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Magazine'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new magazine
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Magazine'
      responses:
        '201':
          description: Magazine has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Magazine'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /magazine/{magazine_id}:
    get:
      description: Returns the magazine with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: magazine_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Magazine data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Magazine'
        '404':
          description: Magazine with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a magazine
      security:
        - bearerAuth: []
      parameters:
        - name: magazine_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Magazine'
      responses:
        '201':
          description: Magazine has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Magazine'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete a magazine
      security:
        - bearerAuth: []
      parameters:
        - name: magazine_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Magazine has been deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Magazine'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /loan:
    get:
      description: Returns a list of loans
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of loans returned successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Loan'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new loan
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
      responses:
        '201':
          description: Loan has been created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /loan/{loan_id}:
    get:
      description: Returns the loan with the given ID
      security:
        - bearerAuth: []
      parameters:
        - name: loan_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Loan data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '404':
          description: Loan with the give ID was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Update a loan
      security:
        - bearerAuth: []
      parameters:
        - name: loan_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
      responses:
        '201':
          description: Loan has been updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Delete a loan
      security:
        - bearerAuth: []
      parameters:
        - name: loan_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Loan has been deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        address:
          type: string
        active:
          type: boolean
    Book:
      type: object
      required:
        - writer
        - title
        - length
        - onloan
      properties:
        writer:
          type: string
        title:
          type: string
        length:
          type: number
        style:
          type: string
        onloan:
          type: boolean
    Cd:
      type: object
      required:
        - performer
        - title
        - length
      properties:
        performer:
          type: string
        title:
          type: string
        length:
          type: number
        style:
          type: string
    Magazine:
      type: object
      required:
        - title
        - year
        - month
        - description
      properties:
        title:
          type: string
        year:
          type: number
        month:
          type: string
        description:
          type: string
  
    Loan:
      type: object
      required:
        - borrower
        - book
      properties:
        borrower:
          type: object
          $ref: '#/components/schemas/User'
        book:
            type: object
            $ref: '#/components/schemas/Book'
        loandate: 
            type: string
        loanend:
            type: string
    Error:
      type: object
      required:
        - message
        - has_error
      properties:
        message:
          type: string
        has_error:
          type: boolean
